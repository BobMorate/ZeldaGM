<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fx_swipe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///List of Colors
rainbow=ds_list_create();

var _palettes = ds_map_find_value(Pal_Map,spr_gel_palette); //Load the palettes list.
for(var i=1;i&lt;ds_list_size(_palettes)-1;i++)
{
    var _colors = ds_list_find_value(_palettes,i);
    ds_list_add(rainbow,ds_list_find_value(_colors,4));
}

timer=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(rainbow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _color=timer*3;
var _color1=timer*3-2;
var _color2=timer*3-4;
if(_color&gt;ds_list_size(rainbow)-1)
{
    _color-=ds_list_size(rainbow);
}
if(_color1&gt;ds_list_size(rainbow)-1)
{
    _color1-=ds_list_size(rainbow);
}
if(_color2&gt;ds_list_size(rainbow)-1)
{
    _color2-=ds_list_size(rainbow);
}

image_angle-=45
if(timer mod 2 == 0)
    image_blend=c_white//ds_list_find_value(rainbow,_color);
else
    image_blend=ds_list_find_value(rainbow,_color);
_color1=ds_list_find_value(rainbow,_color1);
_color2=ds_list_find_value(rainbow,_color2);
image_alpha=1;

var _trail_width=10;
if(timer&gt;1)
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle+_trail_width*2,_color2,1);
if(timer&gt;0)
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle+_trail_width,_color1,1);

draw_self();

timer++;
/*
image_angle-=22.5//choose(22.5,45,90);
image_blend=c_white;//choose(c_white,c_white,c_white,c_aqua,c_yellow,c_fuchsia,c_teal,c_lime,c_orange);
image_alpha=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,17</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
