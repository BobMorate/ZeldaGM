<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic Properties
event_inherited()
start_size=0;
target_size=3;
size=start_size;
length=0;
timer=0;
delay=0;
target=noone;
my_tween=noone;
surface=surface_create(screen_width,screen_height);
surface_set_target(surface);
draw_clear_alpha(c_black,0);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface Free
surface_free(surface);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate
if(timer == delay)
{
    if(my_tween==noone)
        my_tween=TweenPlayOnce(TweenCreate(id,false),size__,start_size,target_size,length,EaseInSine);
}
else
    timer++;
    
if(timer&gt;delay+length)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw Effect
if(surface_exists(surface))
{
    if(instance_exists(target))
    {   //Center Effect on Target
        //show_debug_message("Centering on Target");
        var _xoff = sprite_get_width(target.sprite_index)/2*image_xscale;
        var _yoff = sprite_get_height(target.sprite_index)/2*image_yscale;
        center_x=target.x-view_xview+_xoff;
        center_y=target.y-view_yview+_yoff;
    }
    else
    {   //...or on the screen.
        //show_debug_message("Centering on Screen");
        center_x=view_xview+view_wview/2;
        center_y=view_yview+view_hview/2;
    }
    
    surface_set_target(surface)
    {
        draw_clear_alpha(c_black,1);
        draw_set_blend_mode(bm_subtract);
        draw_set_color(c_white);
        draw_ellipse(center_x-(screen_width*.5)*size,
                     center_y-(screen_height*.5)*size,
                     center_x+(screen_width*.5)*size,
                     center_y+(screen_height*.5)*size,
                     false);
        draw_set_blend_mode(bm_normal);
        //draw_circle_colour(obj_link.x-view_xview,obj_link.y-view_yview,10,c_red,c_red,false);
        //draw_circle_colour(center_x,center_y,5,c_blue,c_blue,false);
    }
    surface_reset_target();
    
    draw_surface(surface,view_xview,view_yview);
}
else
{
    show_debug_message("Recreating surface");
    surface=surface_create(screen_width,screen_height);
    surface_set_target(surface);
    draw_clear_alpha(c_black,0);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
