<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start 3D
x=296;
y=248;
z=200;
spd=4;

timer=0;
triforce_sound=noone;

d3d_start();
d3d_set_lighting(true);

//d3d_light_define_direction(1,0,0,1,c_yellow);
//d3d_light_enable(1,true);

d3d_light_define_ambient(c_gray);

d3d_light_define_point(2,x,y,1000,10000,c_white);
d3d_light_enable(2,true);

d3d_set_shading(true);

draw_set_color(c_white);
texture_set_repeat(true);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add Triangles
distance=35;
angle=60;
var _bot=instance_create(296,248,obj_triangle);
var _right=instance_create(296+lengthdir_x(distance,180+angle),248+lengthdir_y(distance,180+angle),obj_triangle);
_right.rotate_counter=true;
var _left=instance_create(296+lengthdir_x(distance,360-angle),248+lengthdir_y(distance,360-angle),obj_triangle);
with(obj_triangle)
{
    z=20;
    x_angle=180;
}

//Tween Info
length=8.1;
var _rotate_length=8;
var _translate_length=5.5;
var _rotate_ease=EaseOutQuad;
var _translation_ease=EaseOutQuad;
var _distance=100;
var _rotation_count=4.5;
angle=45;
//Bot Triangle Animation

_tri=_bot;
var _tween_y=TweenCreate(_tri,true);
TweenPlayOnce(_tween_y,y__,_tri.y-_distance,_tri.y,_translate_length,_translation_ease);
var _tween_x_angle=TweenCreate(_tri,true);
TweenPlayOnce(_tween_x_angle,x_angle__,_rotation_count*360,_tri.x_angle,_rotate_length,_rotate_ease);
var _tween_y_angle=TweenCreate(_tri,true);
TweenPlayOnce(_tween_y_angle,y_angle__,_rotation_count*360,_tri.y_angle,_rotate_length,_rotate_ease);
var _tween_scale=TweenCreate(_tri,true);
TweenPlayOnce(_tween_scale,scale__,0,1,_rotate_length,EaseLinear);

//Right Triangle
_tri=_right;
var _tween_y=TweenCreate(_tri,true);
TweenPlayOnce(_tween_y,y__,_tri.y+lengthdir_y(_distance,180+angle),_tri.y,_translate_length,_translation_ease);
var _tween_x=TweenCreate(_tri,true);
TweenPlayOnce(_tween_x,x__,_tri.x+lengthdir_x(_distance,180+angle),_tri.x,_translate_length,_translation_ease);
var _tween_x_angle=TweenCreate(_tri,true);
TweenPlayOnce(_tween_x_angle,x_angle__,_rotation_count*360,_tri.x_angle,_rotate_length,_rotate_ease);
var _tween_y_angle=TweenCreate(_tri,true);
TweenPlayOnce(_tween_y_angle,y_angle__,_rotation_count*360,_tri.y_angle,_rotate_length,_rotate_ease);
var _tween_scale=TweenCreate(_tri,true);
TweenPlayOnce(_tween_scale,scale__,0,1,_rotate_length,EaseLinear);

//Right Triangle
_tri=_left;
var _tween_y=TweenCreate(_tri,true);
TweenPlayOnce(_tween_y,y__,_tri.y+lengthdir_y(_distance,360-angle),_tri.y,_translate_length,_translation_ease);
var _tween_x=TweenCreate(_tri,true);
TweenPlayOnce(_tween_x,x__,_tri.x+lengthdir_x(_distance,360-angle),_tri.x,_translate_length,_translation_ease);
var _tween_x_angle=TweenCreate(_tri,true);
TweenPlayOnce(_tween_x_angle,x_angle__,_rotation_count*360,_tri.x_angle,_rotate_length,_rotate_ease);
var _tween_y_angle=TweenCreate(_tri,true);
TweenPlayOnce(_tween_y_angle,y_angle__,_rotation_count*360,_tri.y_angle,_rotate_length,_rotate_ease);
var _tween_scale=TweenCreate(_tri,true);
TweenPlayOnce(_tween_scale,scale__,0,1,_rotate_length,EaseLinear);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_lighting(false);
d3d_end();

FMODAllStop();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play Sound, Check for end.
if(timer == 70)
    sfx_play("Triforce Intro");
    
if(timer&gt;=(length+.5)*room_speed)
{
    d3d_end();
    d3d_set_lighting(false);
    with(obj_game_manager)
    {
        room_goto(rm_start_screen);
        state_next=game_state_press_start;
        instance_kill(obj_3dCamera);
        instance_kill(obj_triangle);
    }
}
timer++;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Adjust Camera
/*if(keyboard_check(vk_shift))
{
    x+=keyboard_check(vk_right)*spd;
    x-=keyboard_check(vk_left)*spd;
    
    y+=keyboard_check(vk_down)*spd;
    y-=keyboard_check(vk_up)*spd;
    

    if(mouse_wheel_down())
        z+=spd*3;
    if(mouse_wheel_up())
        z-=spd*3;
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_color(c_white);
if(instance_exists(obj_triangle))
{
    draw_text(0,0,"x: "+string(x)+
                 "#y: "+string(y)+
                 "#z: "+string(z)+
                 "#Block"+
                 "#x: "+string(obj_triangle.x)+
                 "#y: "+string(obj_triangle.y)+
                 "#z: "+string(obj_triangle.z)+
                 "#x_angle: "+string(obj_triangle.x_angle)+
                 "#y_angle: "+string(obj_triangle.y_angle)+
                 "#z_angle: "+string(obj_triangle.z_angle));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set projections
d3d_set_projection(x,y,z,
                   x,y+1,0,
                   0,0,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
