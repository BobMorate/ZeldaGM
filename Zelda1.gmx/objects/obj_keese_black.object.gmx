<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_keese</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_master</parentName>
  <maskName>spr_collision_12x16_bot</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keese Properties
event_inherited();
team=1;
damage=.5;
hit_points=0;
z=8;
actor_set_shadow(spr_shadow_small);
light_sprite=spr_keese_eyes;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Definition
state_add("Stand",state_keese_stand,0,spr_keese);
state_add("Walk",state_keese_walk,0,spr_keese);
state_add("Knock Back",state_keese_knockback,6,spr_keese);

state_switch("Stand");
shield_visible=false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Palette
my_pal_sprite=spr_keese_palette;
current_pal=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Override controls, Init AI
override_controls=true;
ai_script=ai_keese;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Boundaries
bound_left=0;
bound_right=0;
bound_top=0;
bound_bot=0;
grid_xoff=0;
grid_yoff=0;
var _start_x,_start_y,_end_x,_end_y;
with(obj_world_manager)
{
    other.bound_left=(bound_left+bound_right+screen_width)/2;
    other.bound_top=(bound_top+bound_bot+screen_height)/2;
    _start_x=bound_left;
    _end_x=bound_right+screen_width;
    _start_y=bound_top;
    _end_y=bound_bot+screen_height;
}

bound_right=bound_left;
bound_bot=bound_top;

for(var xx=_start_x; xx&lt;_end_x; xx+=tile_size)
{
    for(var yy=_start_y; yy&lt;_end_y; yy+=tile_size)
    {
        if(tile_layer_find(safe_aerial_layer,xx,yy))
        {
            if(xx&lt;bound_left)
                bound_left=xx;
            else if(xx&gt;bound_right)
                bound_right=xx;
            if(yy&lt;bound_top)
                bound_top=yy;
            else if(yy&gt;bound_bot)
                bound_bot=yy;
        }
    }
}
if(x&lt;bound_left)
    x=bound_left+1;
if(x&gt;bound_right)
    x=bound_right-1;
if(y&lt;bound_top)
    y=bound_top+1;
if(y&gt;bound_bot)
    y=bound_bot-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_text(0,0,"X: "+string(x)+
              "#Y: "+string(y)+
              "#Against Wall: "+string(against_wall))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug Stuff
//draw_line_colour(x-2,y,x+2,y,c_green,c_green);
//draw_line_colour(x,y-2,x,y+2,c_green,c_green);
//draw_sprite_ext(mask_index,0,x,y,1,1,0,c_white,.5);

/*if(ai_destination_x&gt;0 &amp;&amp; ai_destination_y&gt;0)
{
    draw_circle_color(ai_destination_x,ai_destination_y,2,c_green,c_green,false);
}
*/
/*draw_set_color(c_green);
draw_rectangle(bound_left,bound_top,bound_right,bound_bot,true);
tile_layer_hide(safe_aerial_layer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,7</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
