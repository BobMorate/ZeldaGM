<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties

//Dark Rooms


//Rain
rain_sfx=sfx_play("Rain In",true);
rain_volume_mod=.5;
FMODInstanceSetVolume(rain_sfx,0);

//Surface
surface=surface_create(screen_width,screen_height);
clear_surface(surface);
dark_alpha=0;

//Lights
lantern_scale=0;
lantern_base=.5*save_data_get("Lantern");
lantern_amp=.025;
lantern_speed=.4;
light_alpha=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create surface if it doesn't exist
if(!surface_exists(surface))
{
    surface=surface_create(screen_width,screen_height);
    clear_surface(surface);   
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for outside rain.
var _is_raining;
with(obj_outside_environment_manager)
{
    if(current_weather==Weather.Rainy)
        _is_raining=true;
    else
        _is_raining=false;
}
var _in_exit_room=false;
if(_is_raining)
{
    var _exit;
    with(obj_warp)
    {
        if(target_room==rm_overworld)
        {
            _exit=id;
            break;
        }
    }
    if(is_in_sector(_exit.x,_exit.y))
    {   //It's raining outside and we are in the room that exits out.
        _in_exit_room=true;
        if(FMODInstanceGetVolume(rain_sfx)==0)
            FMODInstanceFadeVolume(rain_sfx,0,SFX_Volume*rain_volume_mod,seconds(3));
    }
    else
        _in_exit_room=false;
}

if((!_is_raining || !_in_exit_room)&amp;&amp;FMODInstanceGetVolume(rain_sfx)&gt;0)  //Fade out rain sound
    FMODInstanceFadeVolume(rain_sfx,FMODInstanceGetVolume(rain_sfx),0,seconds(3));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for dark rooms
var _dark_room=false;
with(obj_dark_room_marker)
{
    if(_dark_room=false)
        _dark_room=is_in_sector(x,y);

}
    
if(_dark_room)
    dark_alpha+=.035;
else
    dark_alpha-=.035;
    
dark_alpha=clamp(dark_alpha,0,1);

if(surface_exists(surface))
{
    surface_set_target(surface);
    draw_clear(merge_colour(c_white,c_black,dark_alpha));
    //Draw Lights
    
    ///Link's lantern
    environment_draw_lights();
    
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup Stuff
surface_free(surface);
FMODInstanceStop(rain_sfx);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Surface
if(surface_exists(surface))
{
    draw_set_blend_mode_ext(bm_dest_color, bm_zero)
        draw_surface(surface,view_xview,view_yview);
    draw_set_blend_mode(bm_normal);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
