<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fx_flame</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bomb Properties
timer=0;
damage=4;
team=0;
draw_shadow=false;
sfx_play("Bomb Drop",false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Countdown and explode
if(timer&gt;explosion_delay)
{   //Explode
    instance_create(x,y,obj_fx_bomb_explosion);
    instance_destroy();
    var _w = instance_create(x,y,obj_weapon);
    _w.sprite_index=spr_link_spin_attack_collision;
    _w.team=team;
    _w.damage=damage;
    _w.expire_timer=10;
    sfx_play("Bomb Blow");
    var _shake=instance_create(0,0,obj_fx_screenshake);
    _shake.direction=90;
    _shake.amp=10;
    //check for bomb walls
    _dist=18; //max distance for bombs to find walls.
    for(var i=0; i&lt;8; i++)
    {
        var _inst=instance_position(x+lengthdir_x(_dist,i*45),y+lengthdir_y(_dist,i*45),obj_bomb_wall)
        if(_inst != noone)
        {
            //show_debug_message("Found a bombable wall");
            _inst.active=true;
        }
    }
}
timer++;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self
depth=-y;
if(draw_shadow)
    draw_sprite(spr_shadow_medium,0,x,y);
draw_sprite_ext(sprite_index,0,x,y-z,image_xscale,image_yscale,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>6,10</point>
    <point>7,7</point>
  </PhysicsShapePoints>
</object>
