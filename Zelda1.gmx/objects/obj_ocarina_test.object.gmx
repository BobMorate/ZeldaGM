<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instantiate Instances
a=sfx_play("Ocarina A",true);
FMODInstanceSetPaused(a,true);
b=sfx_play("Ocarina B",true);
FMODInstanceSetPaused(b,true);
d=sfx_play("Ocarina D",true);
FMODInstanceSetPaused(d,true);
d2=sfx_play("Ocarina D2",true);
FMODInstanceSetPaused(d2,true);
f=sfx_play("Ocarina F",true);
FMODInstanceSetPaused(f,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var key=0;
if(keyboard_check(ord("Y")))
    key=3; //Lowest
else if(keyboard_check(ord("U")))
    key=5; //2nd lowest
else if(keyboard_check(ord("I")))
    key=1; //3rd lowest
else if(keyboard_check(ord("O")))
    key=2; //4th
else if(keyboard_check(ord("P")))
    key=4; //5th

switch(key)
{
    case 0:
        FMODInstanceSetPaused(a,true);
        FMODInstanceSetPaused(b,true);
        FMODInstanceSetPaused(d,true);
        FMODInstanceSetPaused(d2,true);
        FMODInstanceSetPaused(f,true);
        break;
    case 1:
        FMODInstanceSetPaused(a,false);
        FMODInstanceSetPaused(b,true);
        FMODInstanceSetPaused(d,true);
        FMODInstanceSetPaused(d2,true);
        FMODInstanceSetPaused(f,true);
        break;
    case 2:
        FMODInstanceSetPaused(a,true);
        FMODInstanceSetPaused(b,false);
        FMODInstanceSetPaused(d,true);
        FMODInstanceSetPaused(d2,true);
        FMODInstanceSetPaused(f,true);
        break;
    case 3:
        FMODInstanceSetPaused(a,true);
        FMODInstanceSetPaused(b,true);
        FMODInstanceSetPaused(d,false);
        FMODInstanceSetPaused(d2,true);
        FMODInstanceSetPaused(f,true);
        break;
    case 4:
        FMODInstanceSetPaused(a,true);
        FMODInstanceSetPaused(b,true);
        FMODInstanceSetPaused(d,true);
        FMODInstanceSetPaused(d2,false);
        FMODInstanceSetPaused(f,true);
        break;
    case 5:
        FMODInstanceSetPaused(a,true);
        FMODInstanceSetPaused(b,true);
        FMODInstanceSetPaused(d,true);
        FMODInstanceSetPaused(d2,true);
        FMODInstanceSetPaused(f,false);
        break;
}

/*
a=noone;
b=noone;
d=noone;
d2=noone;
f=noone;*/
/*var _a,_b,_d,_d2,_f;
_a=false;
_b=false;
_d=false;
_d2=false;
_f=false;

if(keyboard_check(ord("Y")))
{
    a=sfx_play("Ocarina A",true);
    _a=true;
}
else if(keyboard_check(ord("U")))
{
    b=sfx_play("Ocarina B",true);
    _b=true;
}
else if(keyboard_check(ord("I")))
{
    d=sfx_play("Ocarina D",true);
    _d=true;
    
}
else if(keyboard_check(ord("O")))
{
    d2=sfx_play("Ocarina D2",true);
    _d2=true;
    
}
else if(keyboard_check(ord("P")))
{
    f=sfx_play("Ocarina F",true);
    _f=true;
}

if(_a)
{
    if(FMODInstanceIsPlaying(b))
        FMODInstanceStop(b);
    FMODInstanceStop(d);
    FMODInstanceStop(d2);
    FMODInstanceStop(f);
}
else if(_b)
{
    FMODInstanceStop(a);
    FMODInstanceStop(d);
    FMODInstanceStop(d2);
    FMODInstanceStop(f);
}
else if(_d)
{
    FMODInstanceStop(a);
    FMODInstanceStop(b);
    FMODInstanceStop(d2);
    FMODInstanceStop(f);
}
else if(_d2)
{
    FMODInstanceStop(b);
    FMODInstanceStop(d);
    FMODInstanceStop(a);
    FMODInstanceStop(f);
}
else if(_f)
{
    FMODInstanceStop(b);
    FMODInstanceStop(d);
    FMODInstanceStop(d2);
    FMODInstanceStop(a);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
