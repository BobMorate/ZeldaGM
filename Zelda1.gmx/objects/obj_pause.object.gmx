<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
pause_surface=surface_create(surface_get_width(application_surface),surface_get_height(application_surface));
surface_set_target(pause_surface)
    draw_clear_alpha(c_black,0);
surface_reset_target();
is_paused=false;


objects_to_disable=ds_list_create();
ds_list_add(objects_to_disable,
            obj_actor_master,
            obj_projectile,
            obj_fx_parent,
            obj_room_transition_manager,
            shared_Tweener,
            obj_bomb)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unpause
surface_free(pause_surface);
for(var i=0;i&lt;ds_list_size(objects_to_disable);i++)
        instance_activate_object(ds_list_find_value(objects_to_disable,i));
ds_list_destroy(objects_to_disable);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause
if(!is_paused || !surface_exists(pause_surface))
{
    if(!surface_exists(pause_surface))
    {
        pause_surface=surface_create(surface_get_width(application_surface),surface_get_height(application_surface));
        surface_set_target(pause_surface)
            draw_clear_alpha(c_black,0);
        surface_reset_target();
    }
    is_paused=true;
    
    surface_set_target(pause_surface);
        draw_clear_alpha(c_black,0);
        draw_enable_alphablend(false);
            draw_surface(application_surface,0,0);
        draw_enable_alphablend(true);
        draw_set_color(c_black);
        draw_set_blend_mode(bm_add);
            draw_rectangle(0,0,surface_get_width(pause_surface),surface_get_height(pause_surface),false);
        draw_set_blend_mode(bm_normal);
    surface_reset_target();
    
    
    for(var i=0;i&lt;ds_list_size(objects_to_disable);i++)
        instance_deactivate_object(ds_list_find_value(objects_to_disable,i));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(pause_surface))
{
    draw_surface(pause_surface,view_xview,view_yview);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
