<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate draw grid properties
display_string="Grid";
width=0;
height=0;
ypos=y;

grid=ds_grid_create(0,0);
column_padding=5;
column_widths[0]=noone;
row_heights[0]=noone;
font=noone;
ready=false;
source_grid=noone;
update=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update and Size grid
if(update)
    ds_grid_copy(grid,source_grid);

draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_black);
draw_set_font(font);
//Get column widths
var i;
//init column_widths and row_heights array
i=0;
repeat(ds_grid_width(grid))
{
    column_widths[i]=0;
    i+=1;
}
i=0;
repeat(ds_grid_height(grid))
{
    row_heights[i]=0;
    i+=1;
}

//Find max column widths and max row heights
cw=0;
ch=15;
cc=0;
cr=0;
repeat(ds_grid_width(grid))
{
    cr=0;
    repeat(ds_grid_height(grid))
    {
        cw=string_width("| "+string(ds_grid_get(grid,cc,cr)));
        ch=string_height(string(ds_grid_get(grid,cc,cr)));
        if(cw&gt;column_widths[cc])
            column_widths[cc]=cw;
        if(ch&gt;row_heights[cr])
        {
            row_heights[cr]=ch;
        }
        cr+=1;
    }
    cc+=1;
}
ready=true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move this shit around with Control+Arrow Keys
if(keyboard_check_direct(vk_control))
{
    if(keyboard_check(vk_left))
        x-=5;
    if(keyboard_check(vk_right))
        x+=5;
    if(keyboard_check(vk_up))
        y-=5;
    if(keyboard_check(vk_down))
        y+=5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Grid
if(ready)
{
    ///Debug - Draw Palette Info
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_color(c_black);
    draw_set_font(font);
    var cr,cc,cx,cy;
    cr=0;
    cc=0;
    cx=x;
    cy=ypos+y;
    draw_text(x,cy,display_string)
    
    repeat(ds_grid_width(grid))
    {
        cr=0;
        cy=ypos+string_height(display_string)+y;
        repeat(ds_grid_height(grid))
        {
            draw_text(cx,cy,"| "+string(ds_grid_get(grid,cc,cr)));
            cy+=row_heights[cr];
            cr+=1;
        }
        
        cx+=column_widths[cc]+column_padding;
        cc+=1;
        
    }
    height=cy-ypos;
    width = cx-x;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.5</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.5</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
